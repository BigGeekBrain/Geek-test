* {
	margin: 0px;
	padding: 0px;
}
/*
* - Символ звездочки позволяет выбрать все элементы на странице
*/
ul * {
	color: #220480;
}
/*
Также символ * можно использовать для дочерних элементов объекта
*/
.class {
	color: red;
}
/*
Используйте классы, если Вам нужно применить один стиль к группе элементов.
*/
#paragraf {
	color: lightblue;
}
/*
используйте id для нахождения "иголки в стоге сена" и применения стиля только
к одному конкретному объекту
*/
ul li {
	color: grey;
}
/*
Следующий часто используемый тип селектора - селектор потомка.
Его следует использовать, когда нужно производить более точечный отбор элементов.
*/
p {
	color: green;
}
/*
Что, если Вы хотите сослать на все элементы определенного типа на странице, 
если у них нет id или классов? Делайте проще, используйте селекторы типа.
*/
a:link {
	color: red;
}
/*
Здесь мы используем псевдо-класс :link для выбора всех ссылок, 
на которых еще не был совершен клик.
*/
a:visited {
	color: purple;
}
/*
Также есть псевдо-класс :visited позволяет нам применить стиль 
только к тем ссылкам, по которым был совершен клик или переход.
*/
a:hover {
  background: #e3e3e3;
}
/*
Применение стиля для элемента по наведению курсора мыши.
*/
input[type=radio]:checked {
   border: 1px solid black;
}
/*
Этот псевдо-класс отбирает те элементы, которые были отмечены,
например, радиокнопку или чекбокс.
*/
ul + p {
 color: red;
}
/*
Это так называемый смежный селектор. В этом случае каждый 
параграф следующий сразу после каждого элемента ul будет красного цвета.
*/
#container > ul {
	color: darkgreen;
}
/*
Пример:
<div id="container">
      <ul>
         <li>Элемент списка
           <ul>
              <li>Потомок</li>
           </ul>
         </li>
         <li>Элемент списка</li>
         <li>Элемент списка</li>
         <li>Элемент списка</li>
      </ul>
</div>
Селектор #container > ul выберет только те элементы ul, которые являются
прямыми потомками блока div с идентификатором container. Т.е. в данном
случае этот селектор не отберет элемент ul, который является потомком
первого элемента li.
*/
ul ~ p {
	color: darkred;
}
/*
Эта комбинация похожа на X + Y, но она менее строгая.
В случае ul + p будут выбраны только первые элементы p,
следующие за ul.
А в нашем случае он отберет все элементы p, следующие за элементом ul.
*/
a[title] {
	color: lightgreen;
}
/*
Здесь мы обращаемся к атрибуту селектора. В нашем примере будут 
окрашены в зеленый цвет только ссылки, имеющие атрибут title.
*/
input[type="email"] {
	color: yellow;
}
/*
Здесь мы обращаемся к атрибуту селектора и его значению.
В примере будут окрашены в желтый цвет только ссылки, имеющие атрибут title
со значением email.
*/
a[href*="codeharmony"] {
  color: red;
}
/*
Звездочка означает, что искомое значение может находиться в любой части 
атрибута href. Таким образом, мы можем отобрать и http://www.codeharmony.ru
и www.codeharmony.ru и codeharmony.ru.
*/
a[href$=".jpg"] {
   color: red;
}
/*
используем символ $ для того, чтобы обозначить конец строки.
В данном примере мы ищем все ссылки, которые ссылаются на картинки
с расширением .jpg.
*/
a[data-filetype="image"] {
   color: red;
}
/*
+
<a href="path/to/image.jpg" data-filetype="image">Ссылка</a> - HTML
Создание собственного селектора выбирающего все ссылки на картинки.
*/
div:not(#container) {
   color: blue;
}
/*
Отрицание может быть также очень полезным. Предположим, я хочу выбрать
все блоки div, кроме одного с идентификатором container.
*/
p::first-line {
   font-weight: bold;
   font-size: 1.2em;
}
/*
Псевдоэлементы можно использовать для придания стилей фрагменту элемента,
например, первой строке или первой букве. Применяется только к блочным элементам.
*/
p::first-letter {
   float: left;
   font-size: 2em;
   font-weight: bold;
   font-family: cursive;
   padding-right: 2px;
}
/*
Этот кусок кода найдет все параграфы на странице и применит к первой букве
каждого из них указанные стили. Часто это используется для создания эффекта
"газетного заголовка".
*/
li:nth-child(3) {
   color: red;
}
/*
Если нужно выбрать 3-й элемент списка
*/
li:nth-child(4n) {
   color: red;
}
/*
Если нужно выбрать каждый 4-й элемент списка
*/
li:nth-last-child(2) {
   color: red;
}
/*
Выбор элемента с конца списка
*/
ul li:first-child {
   border-top: none;
}
/*
Этот псевдо-класс позволяет выбрать только первого потомка родительского элемента.
Часто используется для удаления границ первого и последнего элементов списка.

К примеру, если у вас есть список рядов, каждый из которых имеет border-top 
и border-bottom, то последний и первый элементы списка будут немного выбиваться из общего строя.

Для устранения этого недостатка можно использовать данный псевдо-класс.
*/


/*"Мега-чит: border-bottom: 1px solid black; выглядит лучше, 
чем text-decoration: underline;"*/